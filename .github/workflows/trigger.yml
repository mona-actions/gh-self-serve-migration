name: Repositories Migration to GHEC [GEI] (Batched)

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  actions: write

jobs:
  validate-complete-setup:
    if: |
      contains(github.event.comment.body, '/run-dry-run-migration') ||
      contains(github.event.comment.body, '/run-production-migration')
    runs-on: ubuntu-latest
    outputs:
      source_instance: ${{ steps.validate.outputs.source_instance }}
      source_org: ${{ steps.validate.outputs.source_org }}
      target_instance: ${{ steps.validate.outputs.target_instance }}
      target_org: ${{ steps.validate.outputs.target_org }}
      repository_urls: ${{ steps.validate.outputs.repository_urls }}
      repository_count: ${{ steps.validate.outputs.repository_count }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate complete setup
        id: validate
        uses: actions/github-script@v8
        with:
          script: |
            const { validateCompleteSetup } = require('./.github/scripts/config/validate.js');
            return await validateCompleteSetup({github, context, core});
      
      - name: Debug - Show validation outputs
        uses: actions/github-script@v8
        with:
          script: |
            console.log('=== VALIDATION OUTPUTS ===');
            console.log('source_instance:', '${{ steps.validate.outputs.source_instance }}');
            console.log('source_org:', '${{ steps.validate.outputs.source_org }}');
            console.log('target_instance:', '${{ steps.validate.outputs.target_instance }}');
            console.log('target_org:', '${{ steps.validate.outputs.target_org }}');
            console.log('repository_count:', '${{ steps.validate.outputs.repository_count }}');
            console.log('repository_urls length:', '${{ steps.validate.outputs.repository_urls }}'.length);
            console.log('=== END ===');

  initiate-migration-orchestration:
    needs: [validate-complete-setup]
    uses: ./.github/workflows/orchestrator.yml
    with:
      SOURCE_INSTANCE: ${{ needs.validate-complete-setup.outputs.source_instance }}
      SOURCE_ORG: ${{ needs.validate-complete-setup.outputs.source_org }}
      TARGET_INSTANCE: ${{ needs.validate-complete-setup.outputs.target_instance }}
      TARGET_ORG: ${{ needs.validate-complete-setup.outputs.target_org }}
      REPOSITORY_URLS: ${{ needs.validate-complete-setup.outputs.repository_urls }}
      RUNNER: ubuntu-latest
      INSTALL_PREREQS: ${{ vars.INSTALL_PREREQS }}
      BATCH_SIZE: 250
      MIGRATION_TYPE: ${{ contains(github.event.comment.body, 'dry-run') && 'dry-run' || 'production' }}
    secrets: inherit